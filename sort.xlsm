Sub SortLoCCallNumbers()
    Dim ws As Worksheet
    Dim selectedRange As Range
    Dim firstCell As Range
    Dim colLetter As String
    Dim lastRow As Long, lastCol As Long

    ' Set active worksheet
    Set ws = ActiveSheet

    ' Ensure the user has selected a column
    If Selection.Columns.Count <> 1 Then
        MsgBox "Please select a single column containing call numbers.", vbExclamation, "Error"
        Exit Sub
    End If

    ' Get the selected column
    Set selectedRange = Selection
    Set firstCell = selectedRange.Cells(1, 1)
    colLetter = Split(firstCell.Address, "$")(1) ' Extract column letter

    ' Find the last row in the selected column
    lastRow = ws.Cells(ws.Rows.Count, firstCell.Column).End(xlUp).Row

    ' Find the last used column to ensure full row sorting
    lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column

    ' Ensure data exists
    If lastRow < 2 Then
        MsgBox "No call numbers found in the selected column!", vbExclamation, "Error"
        Exit Sub
    End If

    ' Insert new columns for processing next to the selected column
    ws.Columns(firstCell.Column + 1).Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    ws.Columns(firstCell.Column + 2).Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    ws.Cells(1, firstCell.Column + 1).Value = "Intermediate"
    ws.Cells(1, firstCell.Column + 2).Value = "New Call Number"

    ' Apply Part 1 Formula to Intermediate Column (Normalize to four-digit numbers)
    ws.Range(ws.Cells(2, firstCell.Column + 1), ws.Cells(lastRow, firstCell.Column + 1)).Formula = _
        "=LEFT(" & colLetter & "2,IF(ISERR(VALUE(MID(" & colLetter & "2,2,1))),2,1)) & REPT(""0"",5-FIND("".""," & colLetter & "2)+IF(ISERR(VALUE(MID(" & colLetter & "2,2,1))),2,1)) & RIGHT(" & colLetter & "2,LEN(" & colLetter & "2)-IF(ISERR(VALUE(MID(" & colLetter & "2,2,1))),2,1))"

    ' Apply Part 2 Formula to New Call Number Column (Ensure .0 exists)
    ws.Range(ws.Cells(2, firstCell.Column + 2), ws.Cells(lastRow, firstCell.Column + 2)).Formula = _
        "=IF(IF(ISERROR(FIND(""."", " & colLetter & "2, 1+FIND(""."", " & colLetter & "2))), FALSE, FIND(""."", " & colLetter & "2, 1+FIND(""."", " & colLetter & "2))<FIND("" "" , " & colLetter & "2)), " & colLetter & "2, LEFT(" & colLetter & "2,FIND("".""," & colLetter & "2)) & ""0."" & RIGHT(" & colLetter & "2,LEN(" & colLetter & "2)-FIND("".""," & colLetter & "2)))"
    
    
    ' NEED TO START CHECKING FROM HERE
    
    ' Convert formulas to values
    ws.Range(ws.Cells(2, firstCell.Column + 1), ws.Cells(lastRow, firstCell.Column + 2)).Copy
    ws.Range(ws.Cells(2, firstCell.Column + 1), ws.Cells(lastRow, firstCell.Column + 2)).PasteSpecial Paste:=xlPasteValues
    Application.CutCopyMode = False

    ' Sort entire rows by "New Call Number" (column next to selected column)
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add2 Key:=ws.Range(ws.Cells(2, firstCell.Column + 2), ws.Cells(lastRow, firstCell.Column + 2)), _
        SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal

    With ws.Sort
        ' Ensure the sort range includes the full data (from column 1 to the last used column)
        .SetRange ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, lastCol)) ' Sort entire row range
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .Apply
    End With

    ' Cleanup: Remove extra columns
    ws.Columns(firstCell.Column + 1).Delete
    ws.Columns(firstCell.Column + 1).Delete

    ' Confirmation message
    MsgBox "Sorting complete for column " & colLetter & ", and entire rows have been sorted!", vbInformation, "Success"
End Sub


